// File generated by Marble
{% for usingDirective in UsingDirectives %}using {{ usingDirective }};
{% endfor %}
namespace {{ Namespace }}
{
    public interface I{{ ClassName }}Client : IControllerClient
    {
{% for procedure in Procedures %}        
        {{ procedure.MethodReturnType }} {{  procedure.MethodName }}({% for param in procedure.Parameters %}{{param.ReadableTypeName}} {{param.Name}}{% unless forloop.last %}, {% endunless %}{% endfor %});
{% endfor %}
    }

    public sealed class Default{{ ClassName }}Client : I{{ ClassName }}Client
    {
       
        private readonly IMessagingClient messagingClient;
        
        public Default{{ ClassName }}Client(IMessagingClient messagingClient)
        {
            this.messagingClient = messagingClient;
        }

{% for procedure in Procedures %}        public {{ procedure.MethodReturnType }} {{  procedure.MethodName }}({% for param in procedure.Parameters %}{{param.ReadableTypeName}} {{param.Name}}{% unless forloop.last %}, {% endunless %}{% endfor %})
        {
            return this.messagingClient.{% if procedure.ReturnTypeVariant == "Stream" %}InvokeProcedureStream<{{ procedure.PureReturnType }}>{% elsif procedure.ReturnTypeVariant == "Single" %}InvokeProcedureAsync<{{ procedure.PureReturnType }}>{% elsif procedure.ReturnTypeVariant == "Void" %}CallProcedureAsync{% endif %}("{{ ServiceName }}", "{{ procedure.Name }}", new {{ procedure.ProcedureParamsModelTypeName }}({% for param in procedure.Parameters %}{{param.Name}}{% unless forloop.last %}, {% endunless %}{% endfor %}));
        }
    
{% endfor %}
    }
    
{% for procedure in Procedures %}  
    public sealed class {{ procedure.ProcedureParamsModelTypeName }} : ParametersModel
    {
        {% for param in procedure.Parameters %}public {{ param.ReadableTypeName }} {{ param.Name | capitalize }} { get; set; }
        {% endfor %}
        public {{ procedure.ProcedureParamsModelTypeName }}()
        {
        }
        
        public {{ procedure.ProcedureParamsModelTypeName }}({% for param in procedure.Parameters %}{{param.ReadableTypeName}} {{param.Name}}{% unless forloop.last %}, {% endunless %}{% endfor %})
        {
            {% for param in procedure.Parameters %}this.{{ param.Name | capitalize }} = {{ param.Name }};
            {% endfor %}
        }
        
        public override object[] ToObjectArray()
        {
            return new object[]
            {
                  {% for param in procedure.Parameters %}this.{{ param.Name | capitalize }}{% unless forloop.last %},{% endunless %}
                  {% endfor %}
            };
        }
    }
{% endfor %}
}